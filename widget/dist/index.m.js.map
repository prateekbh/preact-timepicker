{"version":3,"file":"index.m.js","sources":["../src/components/my-component/index.js"],"sourcesContent":["import { h, Component } from \"preact\";\nimport \"./style.scss\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      deg: this.getDegFromHours_(new Date().getHours()),\n      step: 'HOURS',\n      currentTime: new Date(),\n    };\n    this.x_ = 0;\n    this.y_ = 0;\n    this.centerX_ = 0;\n    this.centerY_ = 0;\n    this.angles_ = [];\n    for (let angle = 0; angle < 360; angle += 30) {\n      this.angles_.push(angle);\n    }\n  }\n  toRadians_(angle) {\n    return angle * (Math.PI / 180);\n  }\n  toDegree_(radians) {\n    return radians * 180 / Math.PI;\n  };\n  handleDrag_(e) {\n    const x2 = (e.clientX || e.touches[0].clientX) - this.x_;\n    const y2 = (e.clientY || e.touches[0].clientY) - this.y_;\n    const dx = this.centerX_ - x2, dy = this.centerY_ - y2;\n    let deg = (Math.atan2(dy, dx) * 180 / Math.PI ) + 180;\n    switch (this.state.step) {\n      case \"HOURS\":\n        deg = Math.round(deg/30) * 30;\n        if (deg % 30 === 0) {\n          this.setState({\n            deg\n          });\n        }\n      break;\n      case \"MINUTES\":\n      deg = Math.round(deg/6) * 6;\n        if (deg % 6 === 0) {\n          this.setState({\n            deg,\n          });\n        }\n      break;\n    }\n  }\n  reCalibrate_() {\n    const {x, y} = this.svg.getBoundingClientRect();\n    this.x_ = x;\n    this.y_ = y;\n    this.centerX_ = (this.props.size||400) / 2;\n    this.centerY_ = (this.props.size||400) / 2;\n  }\n  handleEnd_(e) {\n    switch (this.state.step) {\n      case \"HOURS\":\n        const hours = (Math.round(this.state.deg) / 30) + 3;\n        if (this.props.onHoursSelect) {\n          this.props.onHoursSelect(hours % 12);\n        }\n        this.setState({\n          step: \"MINUTES\",\n          deg: this.getDegFromMinutes_(this.state.currentTime.getMinutes())\n        });\n      break;\n      case \"MINUTES\":\n        const minutes = (Math.round(this.state.deg) / 30) + 3;\n        if (this.props.onMinutesSelect) {\n          this.props.onMinutesSelect((minutes * 5) % 60);\n        }\n      break;\n    }\n  }\n  getDegFromHours_(hours) {\n    return (hours - 3) * 30;\n  }\n  getDegFromMinutes_(minutes) {\n    return (minutes - 15) * 6;\n  }\n  mouseUp_() {\n    this.setState({\n      mouseDown:false,\n    });\n    this.handleEnd_();\n  }\n  mouseDown_() {\n    this.reCalibrate_();\n    this.setState({\n      mouseDown:true,\n    })\n  }\n  mouseMove_(e) {\n    if (this.state.mouseDown) {\n      this.handleDrag_(e);\n    }\n  }\n\n  showHours() {\n    this.setState({\n      step: 'HOURS'\n    });\n  }\n  showMinutes() {\n    this.setState({\n      step: 'MINUTES'\n    });\n  }\n\n  render(props) {\n    return (\n      <svg class=\"dial minues\" width={this.props.size || '400'} height={this.props.size || '400'} viewBox=\"0 0 400 400\"\n        onTouchStart={this.reCalibrate_.bind(this)}\n        onTouchMove={this.handleDrag_.bind(this)}\n        onTouchEnd={this.handleEnd_.bind(this)}\n        onMouseDown={this.mouseDown_.bind(this)}\n        onMouseMove={this.mouseMove_.bind(this)}\n        onMouseUp={this.mouseUp_.bind(this)}\n        ref={svg => this.svg = svg}>\n        <style>\n        {`\n          :root{\n            fill: transparent;\n            stroke: #000;\n            user-select: none;\n          }\n          text {\n            fill: #000;\n            font-family: helvetica;\n            alignment-baseline: central;\n            text-anchor: middle;\n          }\n          .arm {\n            fill: #0091EA;\n            transform-origin: center center;\n            transition-property: transform;\n            transition-duration: 400ms;\n          }\n          .minutes, .hours {\n            transition-property: opacity, transform;\n            transition-duration: 300ms;\n            transform-origin: center;\n          }\n          .display.HOURS .minutes{\n            opacity: 0;\n            transform: scale(0.7);\n          }\n          .display.MINUTES .hours{\n            opacity: 0;\n            transform: scale(0.7);\n          }\n        `}\n        </style>\n        <circle cx=\"200\" cy=\"200\" r=\"190\" />\n        <g class={`display ${this.state.step}`}>\n          <g class=\"arm\" style={`transform: rotate(${this.state.deg}deg)`}>\n            <rect width=\"145\" height=\"2\" x=\"199\" y=\"199\" stroke-width=\"0\"></rect>\n            <circle cx=\"200\" cy=\"200\" r=\"5\" stroke-width=\"0\"></circle>\n            <circle cx=\"360\" cy=\"200\" r=\"20\" stroke-width=\"0\"></circle>\n          </g>\n          <g class=\"hours\">\n            {\n              this.angles_.map((angle, index) => {\n                return (<text x={Math.round(160 * Math.cos(this.toRadians_(angle))) + 200} y={Math.round(160 * Math.sin(this.toRadians_(angle))) + 200} class=\"digit\">{(index + 3) % 12 || 12}</text>);\n              })\n            }\n          </g>\n          <g class=\"minutes\">\n            {\n              this.angles_.map((angle, index) => {\n                return (<text x={Math.round(160 * Math.cos(this.toRadians_(angle))) + 200} y={Math.round(160 * Math.sin(this.toRadians_(angle))) + 200} class=\"digit\">{((index + 3) % 12 || 12) * 5}</text>);\n              })\n            }\n          </g>\n        </g>\n      </svg>\n    );\n  }\n}\n"],"names":["super","this","state","deg","getDegFromHours_","Date","getHours","step","currentTime","x_","y_","centerX_","centerY_","angles_","let","angle","push","toRadians_","Math","PI","toDegree_","radians","handleDrag_","e","const","atan2","clientY","touches","clientX","round","setState","reCalibrate_","svg","getBoundingClientRect","y","props","size","handleEnd_","hours","onHoursSelect","getDegFromMinutes_","getMinutes","minutes","onMinutesSelect","mouseUp_","mouseDown","mouseDown_","mouseMove_","showHours","showMinutes","render","Component"],"mappings":"qEAIE,aACEA,aACAC,KAAKC,OACHC,IAAKF,KAAKG,kBAAiB,IAAIC,MAAOC,YACtCC,KAAM,QACNC,YAAa,IAAIH,MAEnBJ,KAAKQ,GAAK,EACVR,KAAKS,GAAK,EACVT,KAAKU,SAAW,EAChBV,KAAKW,SAAW,EAChBX,KAAKY,WACL,IAAKC,IAAIC,EAAQ,EAAGA,EAAQ,IAAKA,GAAS,QACnCF,QAAQG,KAAKD,mGAGtBE,oBAAWF,GACT,OAAOA,GAASG,KAAKC,GAAK,kBAE5BC,mBAAUC,GACR,OAAiB,IAAVA,EAAgBH,KAAKC,gBAE9BG,qBAAYC,GACVC,IAGIrB,EAA4B,IAArBe,KAAKO,MADoBxB,KAAKW,WAD7BW,EAAEG,SAAWH,EAAEI,QAAQ,GAAGD,SAAWzB,KAAKS,IAC3CT,KAAKU,WAFJY,EAAEK,SAAWL,EAAEI,QAAQ,GAAGC,SAAW3B,KAAKQ,KAGhBS,KAAKC,GAAO,IAClD,OAAQlB,KAAKC,MAAMK,MACjB,IAAK,SACHJ,EAA2B,GAArBe,KAAKW,MAAM1B,EAAI,KACX,IAAO,GACfF,KAAK6B,cACH3B,IAGN,MACA,IAAK,WACLA,EAA0B,EAApBe,KAAKW,MAAM1B,EAAI,IACT,GAAM,GACdF,KAAK6B,cACH3B,kBAMV4B,wBACE,MAAe9B,KAAK+B,IAAIC,8BACxBhC,KAAKQ,OACLR,KAAKS,GAAKwB,EACVjC,KAAKU,UAAYV,KAAKkC,MAAMC,MAAM,KAAO,EACzCnC,KAAKW,UAAYX,KAAKkC,MAAMC,MAAM,KAAO,eAE3CC,oBAAWd,GACT,OAAQtB,KAAKC,MAAMK,MACjB,IAAK,QACHiB,IAAMc,EAASpB,KAAKW,MAAM5B,KAAKC,MAAMC,KAAO,GAAM,EAC9CF,KAAKkC,MAAMI,eACbtC,KAAKkC,MAAMI,cAAcD,EAAQ,IAEnCrC,KAAK6B,UACHvB,KAAM,UACNJ,IAAKF,KAAKuC,mBAAmBvC,KAAKC,MAAMM,YAAYiC,gBAExD,MACA,IAAK,UACHjB,IAAMkB,EAAWxB,KAAKW,MAAM5B,KAAKC,MAAMC,KAAO,GAAM,EAChDF,KAAKkC,MAAMQ,iBACb1C,KAAKkC,MAAMQ,gBAA2B,EAAVD,EAAe,kBAKnDtC,0BAAiBkC,GACf,OAAqB,IAAbA,EAAQ,gBAElBE,4BAAmBE,GACjB,OAAwB,GAAhBA,EAAU,iBAEpBE,oBACE3C,KAAK6B,UACHe,WAAU,IAEZ5C,KAAKoC,0BAEPS,sBACE7C,KAAK8B,eACL9B,KAAK6B,UACHe,WAAU,iBAGdE,oBAAWxB,GACLtB,KAAKC,MAAM2C,WACb5C,KAAKqB,YAAYC,gBAIrByB,qBACE/C,KAAK6B,UACHvB,KAAM,uBAGV0C,uBACEhD,KAAK6B,UACHvB,KAAM,yBAIV2C,gBAAOf,cACL,m/DA9G6BgB"}